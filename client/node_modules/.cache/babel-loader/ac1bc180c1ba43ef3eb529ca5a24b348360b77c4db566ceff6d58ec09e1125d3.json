{"ast":null,"code":"var _jsxFileName = \"/workspace/client/src/components/Settings.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { Settings as SettingsIcon, Bell, MapPin, Clock, AlertTriangle, Save, RotateCcw, Shield, Info, Activity } from 'lucide-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Settings = () => {\n  _s();\n  const [settings, setSettings] = useState({\n    notifications: {\n      enabled: true,\n      floodAlerts: true,\n      waterLevelChanges: true,\n      systemUpdates: false,\n      pushNotifications: false\n    },\n    monitoring: {\n      updateInterval: 15,\n      // minutes\n      searchRadius: 50,\n      // kilometers\n      autoRefresh: true,\n      showAllSites: false\n    },\n    display: {\n      mapLayer: 'osm',\n      showFloodRisk: true,\n      theme: 'auto',\n      units: 'metric'\n    },\n    privacy: {\n      shareLocation: true,\n      allowAnalytics: false,\n      storeHistory: true\n    }\n  });\n  const [hasChanges, setHasChanges] = useState(false);\n  useEffect(() => {\n    // Load settings from localStorage\n    const savedSettings = localStorage.getItem('floodwatch-settings');\n    if (savedSettings) {\n      try {\n        const parsed = JSON.parse(savedSettings);\n        setSettings(prev => ({\n          ...prev,\n          ...parsed\n        }));\n      } catch (error) {\n        console.error('Error loading settings:', error);\n      }\n    }\n  }, []);\n  const updateSetting = (category, key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [category]: {\n        ...prev[category],\n        [key]: value\n      }\n    }));\n    setHasChanges(true);\n  };\n  const saveSettings = () => {\n    try {\n      localStorage.setItem('floodwatch-settings', JSON.stringify(settings));\n      setHasChanges(false);\n      toast.success('Settings saved successfully');\n\n      // Request notification permission if notifications are enabled\n      if (settings.notifications.enabled && settings.notifications.pushNotifications) {\n        requestNotificationPermission();\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      toast.error('Failed to save settings');\n    }\n  };\n  const resetSettings = () => {\n    const defaultSettings = {\n      notifications: {\n        enabled: true,\n        floodAlerts: true,\n        waterLevelChanges: true,\n        systemUpdates: false,\n        pushNotifications: false\n      },\n      monitoring: {\n        updateInterval: 15,\n        searchRadius: 50,\n        autoRefresh: true,\n        showAllSites: false\n      },\n      display: {\n        mapLayer: 'osm',\n        showFloodRisk: true,\n        theme: 'auto',\n        units: 'metric'\n      },\n      privacy: {\n        shareLocation: true,\n        allowAnalytics: false,\n        storeHistory: true\n      }\n    };\n    setSettings(defaultSettings);\n    setHasChanges(true);\n    toast.success('Settings reset to defaults');\n  };\n  const requestNotificationPermission = async () => {\n    if ('Notification' in window) {\n      try {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          toast.success('Push notifications enabled');\n        } else {\n          toast.error('Notification permission denied');\n          updateSetting('notifications', 'pushNotifications', false);\n        }\n      } catch (error) {\n        console.error('Error requesting notification permission:', error);\n        toast.error('Failed to request notification permission');\n      }\n    } else {\n      toast.error('Your browser does not support notifications');\n      updateSetting('notifications', 'pushNotifications', false);\n    }\n  };\n  const SettingSection = ({\n    title,\n    icon: Icon,\n    children\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-section\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-header\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        className: \"section-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"section-title\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-content\",\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, this);\n  const ToggleSwitch = ({\n    checked,\n    onChange,\n    label,\n    description\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"setting-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"setting-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"toggle-switch\",\n      onClick: () => onChange(!checked),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `toggle-slider ${checked ? 'active' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toggle-knob\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 152,\n    columnNumber: 5\n  }, this);\n  const SelectField = ({\n    value,\n    onChange,\n    options,\n    label,\n    description\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"setting-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"setting-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n      value: value,\n      onChange: e => onChange(e.target.value),\n      className: \"setting-select\",\n      children: options.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 166,\n    columnNumber: 5\n  }, this);\n  const NumberField = ({\n    value,\n    onChange,\n    min,\n    max,\n    step,\n    label,\n    description,\n    unit\n  }) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"setting-item\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"setting-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        className: \"setting-label\",\n        children: label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this), description && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"setting-description\",\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"number-input\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"number\",\n        value: value,\n        onChange: e => onChange(Number(e.target.value)),\n        min: min,\n        max: max,\n        step: step,\n        className: \"setting-number\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this), unit && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"input-unit\",\n        children: unit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 18\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"settings-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Settings\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-actions\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: resetSettings,\n          className: \"btn btn-secondary\",\n          children: [/*#__PURE__*/_jsxDEV(RotateCcw, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), \"Reset to Defaults\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: saveSettings,\n          className: `btn ${hasChanges ? 'btn-primary' : 'btn-disabled'}`,\n          disabled: !hasChanges,\n          children: [/*#__PURE__*/_jsxDEV(Save, {\n            size: 18\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this), \"Save Changes\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"settings-content\",\n      children: [/*#__PURE__*/_jsxDEV(SettingSection, {\n        title: \"Notifications\",\n        icon: Bell,\n        children: [/*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.notifications.enabled,\n          onChange: value => updateSetting('notifications', 'enabled', value),\n          label: \"Enable Notifications\",\n          description: \"Allow the app to send you important alerts and updates\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 231,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.notifications.floodAlerts,\n          onChange: value => updateSetting('notifications', 'floodAlerts', value),\n          label: \"Flood Risk Alerts\",\n          description: \"Get notified when flood risk levels change in your area\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.notifications.waterLevelChanges,\n          onChange: value => updateSetting('notifications', 'waterLevelChanges', value),\n          label: \"Water Level Changes\",\n          description: \"Receive alerts when nearby water levels show significant changes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.notifications.pushNotifications,\n          onChange: value => updateSetting('notifications', 'pushNotifications', value),\n          label: \"Push Notifications\",\n          description: \"Send notifications even when the app is closed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 230,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingSection, {\n        title: \"Monitoring\",\n        icon: Activity,\n        children: [/*#__PURE__*/_jsxDEV(NumberField, {\n          value: settings.monitoring.updateInterval,\n          onChange: value => updateSetting('monitoring', 'updateInterval', value),\n          min: 5,\n          max: 60,\n          step: 5,\n          label: \"Update Interval\",\n          description: \"How often to refresh water level data\",\n          unit: \"minutes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NumberField, {\n          value: settings.monitoring.searchRadius,\n          onChange: value => updateSetting('monitoring', 'searchRadius', value),\n          min: 10,\n          max: 100,\n          step: 10,\n          label: \"Search Radius\",\n          description: \"Distance to search for monitoring sites from your location\",\n          unit: \"km\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.monitoring.autoRefresh,\n          onChange: value => updateSetting('monitoring', 'autoRefresh', value),\n          label: \"Auto Refresh\",\n          description: \"Automatically update data at the specified interval\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 283,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.monitoring.showAllSites,\n          onChange: value => updateSetting('monitoring', 'showAllSites', value),\n          label: \"Show All Sites\",\n          description: \"Display all monitoring sites, not just the closest ones\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingSection, {\n        title: \"Display\",\n        icon: MapPin,\n        children: [/*#__PURE__*/_jsxDEV(SelectField, {\n          value: settings.display.mapLayer,\n          onChange: value => updateSetting('display', 'mapLayer', value),\n          options: [{\n            value: 'osm',\n            label: 'Street Map'\n          }, {\n            value: 'satellite',\n            label: 'Satellite View'\n          }, {\n            value: 'terrain',\n            label: 'Terrain Map'\n          }],\n          label: \"Default Map Layer\",\n          description: \"Choose the default map style for the map view\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 299,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SelectField, {\n          value: settings.display.units,\n          onChange: value => updateSetting('display', 'units', value),\n          options: [{\n            value: 'metric',\n            label: 'Metric (meters, km)'\n          }, {\n            value: 'imperial',\n            label: 'Imperial (feet, miles)'\n          }],\n          label: \"Units\",\n          description: \"Display units for measurements\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.display.showFloodRisk,\n          onChange: value => updateSetting('display', 'showFloodRisk', value),\n          label: \"Show Flood Risk Zones\",\n          description: \"Display flood risk visualization on maps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 298,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SettingSection, {\n        title: \"Privacy & Data\",\n        icon: Shield,\n        children: [/*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.privacy.shareLocation,\n          onChange: value => updateSetting('privacy', 'shareLocation', value),\n          label: \"Share Location\",\n          description: \"Allow the app to access your location for monitoring\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.privacy.storeHistory,\n          onChange: value => updateSetting('privacy', 'storeHistory', value),\n          label: \"Store History\",\n          description: \"Keep a local history of your flood monitoring data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ToggleSwitch, {\n          checked: settings.privacy.allowAnalytics,\n          onChange: value => updateSetting('privacy', 'allowAnalytics', value),\n          label: \"Anonymous Analytics\",\n          description: \"Help improve the app by sharing anonymous usage data\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"settings-info\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"info-card\",\n          children: [/*#__PURE__*/_jsxDEV(Info, {\n            className: \"info-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 355,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"info-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n              children: \"About FloodWatch\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 357,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"FloodWatch provides real-time flood monitoring using data from USGS water monitoring stations and NOAA flood prediction services. All data is updated regularly to provide accurate flood risk assessments.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Data Sources:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 17\n              }, this), \" USGS Water Services, NOAA National Water Prediction Service, Open Elevation API\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .settings-page {\n          width: 100%;\n          max-width: 800px;\n          margin: 0 auto;\n        }\n        \n        .settings-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 2rem;\n        }\n        \n        .settings-header h1 {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n          margin: 0;\n        }\n        \n        .settings-actions {\n          display: flex;\n          gap: 1rem;\n        }\n        \n        .btn-disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n        \n        .settings-content {\n          display: flex;\n          flex-direction: column;\n          gap: 2rem;\n        }\n        \n        .setting-section {\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(10px);\n          border-radius: 20px;\n          padding: 2rem;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n        }\n        \n        .section-header {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          margin-bottom: 1.5rem;\n          padding-bottom: 1rem;\n          border-bottom: 2px solid rgba(102, 126, 234, 0.1);\n        }\n        \n        .section-icon {\n          width: 24px;\n          height: 24px;\n          color: #667eea;\n        }\n        \n        .section-title {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #333;\n          margin: 0;\n        }\n        \n        .section-content {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n        \n        .setting-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          gap: 1rem;\n        }\n        \n        .setting-info {\n          flex: 1;\n        }\n        \n        .setting-label {\n          display: block;\n          font-weight: 600;\n          color: #333;\n          margin-bottom: 0.25rem;\n        }\n        \n        .setting-description {\n          color: #666;\n          font-size: 0.9rem;\n          margin: 0;\n          line-height: 1.4;\n        }\n        \n        .toggle-switch {\n          width: 48px;\n          height: 24px;\n          background: #ddd;\n          border-radius: 12px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n          position: relative;\n          flex-shrink: 0;\n        }\n        \n        .toggle-switch.active {\n          background: #667eea;\n        }\n        \n        .toggle-slider {\n          width: 100%;\n          height: 100%;\n          position: relative;\n        }\n        \n        .toggle-knob {\n          width: 20px;\n          height: 20px;\n          background: white;\n          border-radius: 50%;\n          position: absolute;\n          top: 2px;\n          left: 2px;\n          transition: transform 0.3s ease;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        \n        .toggle-switch.active .toggle-knob {\n          transform: translateX(24px);\n        }\n        \n        .setting-select {\n          background: white;\n          border: 2px solid #e2e8f0;\n          border-radius: 8px;\n          padding: 0.5rem;\n          font-weight: 600;\n          color: #333;\n          cursor: pointer;\n          min-width: 150px;\n        }\n        \n        .setting-select:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n        \n        .number-input {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n        }\n        \n        .setting-number {\n          background: white;\n          border: 2px solid #e2e8f0;\n          border-radius: 8px;\n          padding: 0.5rem;\n          font-weight: 600;\n          color: #333;\n          width: 80px;\n          text-align: center;\n        }\n        \n        .setting-number:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n        \n        .input-unit {\n          color: #666;\n          font-size: 0.9rem;\n          font-weight: 600;\n        }\n        \n        .settings-info {\n          margin-top: 2rem;\n        }\n        \n        .info-card {\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(10px);\n          border-radius: 15px;\n          padding: 1.5rem;\n          display: flex;\n          gap: 1rem;\n          border-left: 4px solid #667eea;\n        }\n        \n        .info-icon {\n          width: 24px;\n          height: 24px;\n          color: #667eea;\n          flex-shrink: 0;\n          margin-top: 0.25rem;\n        }\n        \n        .info-content h4 {\n          margin: 0 0 0.5rem 0;\n          color: #333;\n          font-size: 1.1rem;\n        }\n        \n        .info-content p {\n          margin: 0.5rem 0;\n          color: #666;\n          line-height: 1.5;\n          font-size: 0.9rem;\n        }\n        \n        @media (max-width: 768px) {\n          .settings-header {\n            flex-direction: column;\n            gap: 1rem;\n            text-align: center;\n          }\n          \n          .settings-header h1 {\n            font-size: 1.5rem;\n          }\n          \n          .setting-item {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 0.75rem;\n          }\n          \n          .setting-select,\n          .number-input {\n            align-self: flex-start;\n          }\n          \n          .info-card {\n            flex-direction: column;\n            text-align: center;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 370,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(Settings, \"tvu8acc3Xzsfx7Hn5CK4kjbmhg4=\");\n_c = Settings;\nexport default Settings;\nvar _c;\n$RefreshReg$(_c, \"Settings\");","map":{"version":3,"names":["React","useState","useEffect","toast","Settings","SettingsIcon","Bell","MapPin","Clock","AlertTriangle","Save","RotateCcw","Shield","Info","Activity","jsxDEV","_jsxDEV","_s","settings","setSettings","notifications","enabled","floodAlerts","waterLevelChanges","systemUpdates","pushNotifications","monitoring","updateInterval","searchRadius","autoRefresh","showAllSites","display","mapLayer","showFloodRisk","theme","units","privacy","shareLocation","allowAnalytics","storeHistory","hasChanges","setHasChanges","savedSettings","localStorage","getItem","parsed","JSON","parse","prev","error","console","updateSetting","category","key","value","saveSettings","setItem","stringify","success","requestNotificationPermission","resetSettings","defaultSettings","window","permission","Notification","requestPermission","SettingSection","title","icon","Icon","children","className","fileName","_jsxFileName","lineNumber","columnNumber","ToggleSwitch","checked","onChange","label","description","onClick","SelectField","options","e","target","map","option","NumberField","min","max","step","unit","type","Number","size","disabled","jsx","_c","$RefreshReg$"],"sources":["/workspace/client/src/components/Settings.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport toast from 'react-hot-toast';\nimport { \n  Settings as SettingsIcon, \n  Bell, \n  MapPin, \n  Clock, \n  AlertTriangle,\n  Save,\n  RotateCcw,\n  Shield,\n  Info,\n  Activity\n} from 'lucide-react';\n\nconst Settings = () => {\n  const [settings, setSettings] = useState({\n    notifications: {\n      enabled: true,\n      floodAlerts: true,\n      waterLevelChanges: true,\n      systemUpdates: false,\n      pushNotifications: false\n    },\n    monitoring: {\n      updateInterval: 15, // minutes\n      searchRadius: 50, // kilometers\n      autoRefresh: true,\n      showAllSites: false\n    },\n    display: {\n      mapLayer: 'osm',\n      showFloodRisk: true,\n      theme: 'auto',\n      units: 'metric'\n    },\n    privacy: {\n      shareLocation: true,\n      allowAnalytics: false,\n      storeHistory: true\n    }\n  });\n\n  const [hasChanges, setHasChanges] = useState(false);\n\n  useEffect(() => {\n    // Load settings from localStorage\n    const savedSettings = localStorage.getItem('floodwatch-settings');\n    if (savedSettings) {\n      try {\n        const parsed = JSON.parse(savedSettings);\n        setSettings(prev => ({ ...prev, ...parsed }));\n      } catch (error) {\n        console.error('Error loading settings:', error);\n      }\n    }\n  }, []);\n\n  const updateSetting = (category, key, value) => {\n    setSettings(prev => ({\n      ...prev,\n      [category]: {\n        ...prev[category],\n        [key]: value\n      }\n    }));\n    setHasChanges(true);\n  };\n\n  const saveSettings = () => {\n    try {\n      localStorage.setItem('floodwatch-settings', JSON.stringify(settings));\n      setHasChanges(false);\n      toast.success('Settings saved successfully');\n      \n      // Request notification permission if notifications are enabled\n      if (settings.notifications.enabled && settings.notifications.pushNotifications) {\n        requestNotificationPermission();\n      }\n    } catch (error) {\n      console.error('Error saving settings:', error);\n      toast.error('Failed to save settings');\n    }\n  };\n\n  const resetSettings = () => {\n    const defaultSettings = {\n      notifications: {\n        enabled: true,\n        floodAlerts: true,\n        waterLevelChanges: true,\n        systemUpdates: false,\n        pushNotifications: false\n      },\n      monitoring: {\n        updateInterval: 15,\n        searchRadius: 50,\n        autoRefresh: true,\n        showAllSites: false\n      },\n      display: {\n        mapLayer: 'osm',\n        showFloodRisk: true,\n        theme: 'auto',\n        units: 'metric'\n      },\n      privacy: {\n        shareLocation: true,\n        allowAnalytics: false,\n        storeHistory: true\n      }\n    };\n    \n    setSettings(defaultSettings);\n    setHasChanges(true);\n    toast.success('Settings reset to defaults');\n  };\n\n  const requestNotificationPermission = async () => {\n    if ('Notification' in window) {\n      try {\n        const permission = await Notification.requestPermission();\n        if (permission === 'granted') {\n          toast.success('Push notifications enabled');\n        } else {\n          toast.error('Notification permission denied');\n          updateSetting('notifications', 'pushNotifications', false);\n        }\n      } catch (error) {\n        console.error('Error requesting notification permission:', error);\n        toast.error('Failed to request notification permission');\n      }\n    } else {\n      toast.error('Your browser does not support notifications');\n      updateSetting('notifications', 'pushNotifications', false);\n    }\n  };\n\n  const SettingSection = ({ title, icon: Icon, children }) => (\n    <div className=\"setting-section\">\n      <div className=\"section-header\">\n        <Icon className=\"section-icon\" />\n        <h3 className=\"section-title\">{title}</h3>\n      </div>\n      <div className=\"section-content\">\n        {children}\n      </div>\n    </div>\n  );\n\n  const ToggleSwitch = ({ checked, onChange, label, description }) => (\n    <div className=\"setting-item\">\n      <div className=\"setting-info\">\n        <label className=\"setting-label\">{label}</label>\n        {description && <p className=\"setting-description\">{description}</p>}\n      </div>\n      <div className=\"toggle-switch\" onClick={() => onChange(!checked)}>\n        <div className={`toggle-slider ${checked ? 'active' : ''}`}>\n          <div className=\"toggle-knob\"></div>\n        </div>\n      </div>\n    </div>\n  );\n\n  const SelectField = ({ value, onChange, options, label, description }) => (\n    <div className=\"setting-item\">\n      <div className=\"setting-info\">\n        <label className=\"setting-label\">{label}</label>\n        {description && <p className=\"setting-description\">{description}</p>}\n      </div>\n      <select \n        value={value} \n        onChange={(e) => onChange(e.target.value)}\n        className=\"setting-select\"\n      >\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n\n  const NumberField = ({ value, onChange, min, max, step, label, description, unit }) => (\n    <div className=\"setting-item\">\n      <div className=\"setting-info\">\n        <label className=\"setting-label\">{label}</label>\n        {description && <p className=\"setting-description\">{description}</p>}\n      </div>\n      <div className=\"number-input\">\n        <input\n          type=\"number\"\n          value={value}\n          onChange={(e) => onChange(Number(e.target.value))}\n          min={min}\n          max={max}\n          step={step}\n          className=\"setting-number\"\n        />\n        {unit && <span className=\"input-unit\">{unit}</span>}\n      </div>\n    </div>\n  );\n\n  return (\n    <div className=\"settings-page\">\n      <div className=\"settings-header\">\n        <h1>Settings</h1>\n        <div className=\"settings-actions\">\n          <button \n            onClick={resetSettings}\n            className=\"btn btn-secondary\"\n          >\n            <RotateCcw size={18} />\n            Reset to Defaults\n          </button>\n          <button \n            onClick={saveSettings}\n            className={`btn ${hasChanges ? 'btn-primary' : 'btn-disabled'}`}\n            disabled={!hasChanges}\n          >\n            <Save size={18} />\n            Save Changes\n          </button>\n        </div>\n      </div>\n\n      <div className=\"settings-content\">\n        <SettingSection title=\"Notifications\" icon={Bell}>\n          <ToggleSwitch\n            checked={settings.notifications.enabled}\n            onChange={(value) => updateSetting('notifications', 'enabled', value)}\n            label=\"Enable Notifications\"\n            description=\"Allow the app to send you important alerts and updates\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.notifications.floodAlerts}\n            onChange={(value) => updateSetting('notifications', 'floodAlerts', value)}\n            label=\"Flood Risk Alerts\"\n            description=\"Get notified when flood risk levels change in your area\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.notifications.waterLevelChanges}\n            onChange={(value) => updateSetting('notifications', 'waterLevelChanges', value)}\n            label=\"Water Level Changes\"\n            description=\"Receive alerts when nearby water levels show significant changes\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.notifications.pushNotifications}\n            onChange={(value) => updateSetting('notifications', 'pushNotifications', value)}\n            label=\"Push Notifications\"\n            description=\"Send notifications even when the app is closed\"\n          />\n        </SettingSection>\n\n        <SettingSection title=\"Monitoring\" icon={Activity}>\n          <NumberField\n            value={settings.monitoring.updateInterval}\n            onChange={(value) => updateSetting('monitoring', 'updateInterval', value)}\n            min={5}\n            max={60}\n            step={5}\n            label=\"Update Interval\"\n            description=\"How often to refresh water level data\"\n            unit=\"minutes\"\n          />\n          \n          <NumberField\n            value={settings.monitoring.searchRadius}\n            onChange={(value) => updateSetting('monitoring', 'searchRadius', value)}\n            min={10}\n            max={100}\n            step={10}\n            label=\"Search Radius\"\n            description=\"Distance to search for monitoring sites from your location\"\n            unit=\"km\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.monitoring.autoRefresh}\n            onChange={(value) => updateSetting('monitoring', 'autoRefresh', value)}\n            label=\"Auto Refresh\"\n            description=\"Automatically update data at the specified interval\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.monitoring.showAllSites}\n            onChange={(value) => updateSetting('monitoring', 'showAllSites', value)}\n            label=\"Show All Sites\"\n            description=\"Display all monitoring sites, not just the closest ones\"\n          />\n        </SettingSection>\n\n        <SettingSection title=\"Display\" icon={MapPin}>\n          <SelectField\n            value={settings.display.mapLayer}\n            onChange={(value) => updateSetting('display', 'mapLayer', value)}\n            options={[\n              { value: 'osm', label: 'Street Map' },\n              { value: 'satellite', label: 'Satellite View' },\n              { value: 'terrain', label: 'Terrain Map' }\n            ]}\n            label=\"Default Map Layer\"\n            description=\"Choose the default map style for the map view\"\n          />\n          \n          <SelectField\n            value={settings.display.units}\n            onChange={(value) => updateSetting('display', 'units', value)}\n            options={[\n              { value: 'metric', label: 'Metric (meters, km)' },\n              { value: 'imperial', label: 'Imperial (feet, miles)' }\n            ]}\n            label=\"Units\"\n            description=\"Display units for measurements\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.display.showFloodRisk}\n            onChange={(value) => updateSetting('display', 'showFloodRisk', value)}\n            label=\"Show Flood Risk Zones\"\n            description=\"Display flood risk visualization on maps\"\n          />\n        </SettingSection>\n\n        <SettingSection title=\"Privacy & Data\" icon={Shield}>\n          <ToggleSwitch\n            checked={settings.privacy.shareLocation}\n            onChange={(value) => updateSetting('privacy', 'shareLocation', value)}\n            label=\"Share Location\"\n            description=\"Allow the app to access your location for monitoring\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.privacy.storeHistory}\n            onChange={(value) => updateSetting('privacy', 'storeHistory', value)}\n            label=\"Store History\"\n            description=\"Keep a local history of your flood monitoring data\"\n          />\n          \n          <ToggleSwitch\n            checked={settings.privacy.allowAnalytics}\n            onChange={(value) => updateSetting('privacy', 'allowAnalytics', value)}\n            label=\"Anonymous Analytics\"\n            description=\"Help improve the app by sharing anonymous usage data\"\n          />\n        </SettingSection>\n\n        <div className=\"settings-info\">\n          <div className=\"info-card\">\n            <Info className=\"info-icon\" />\n            <div className=\"info-content\">\n              <h4>About FloodWatch</h4>\n              <p>\n                FloodWatch provides real-time flood monitoring using data from USGS water monitoring stations\n                and NOAA flood prediction services. All data is updated regularly to provide accurate flood risk assessments.\n              </p>\n              <p>\n                <strong>Data Sources:</strong> USGS Water Services, NOAA National Water Prediction Service, Open Elevation API\n              </p>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      <style jsx>{`\n        .settings-page {\n          width: 100%;\n          max-width: 800px;\n          margin: 0 auto;\n        }\n        \n        .settings-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 2rem;\n        }\n        \n        .settings-header h1 {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n          margin: 0;\n        }\n        \n        .settings-actions {\n          display: flex;\n          gap: 1rem;\n        }\n        \n        .btn-disabled {\n          opacity: 0.5;\n          cursor: not-allowed;\n        }\n        \n        .settings-content {\n          display: flex;\n          flex-direction: column;\n          gap: 2rem;\n        }\n        \n        .setting-section {\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(10px);\n          border-radius: 20px;\n          padding: 2rem;\n          box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n        }\n        \n        .section-header {\n          display: flex;\n          align-items: center;\n          gap: 1rem;\n          margin-bottom: 1.5rem;\n          padding-bottom: 1rem;\n          border-bottom: 2px solid rgba(102, 126, 234, 0.1);\n        }\n        \n        .section-icon {\n          width: 24px;\n          height: 24px;\n          color: #667eea;\n        }\n        \n        .section-title {\n          font-size: 1.25rem;\n          font-weight: 700;\n          color: #333;\n          margin: 0;\n        }\n        \n        .section-content {\n          display: flex;\n          flex-direction: column;\n          gap: 1.5rem;\n        }\n        \n        .setting-item {\n          display: flex;\n          justify-content: space-between;\n          align-items: flex-start;\n          gap: 1rem;\n        }\n        \n        .setting-info {\n          flex: 1;\n        }\n        \n        .setting-label {\n          display: block;\n          font-weight: 600;\n          color: #333;\n          margin-bottom: 0.25rem;\n        }\n        \n        .setting-description {\n          color: #666;\n          font-size: 0.9rem;\n          margin: 0;\n          line-height: 1.4;\n        }\n        \n        .toggle-switch {\n          width: 48px;\n          height: 24px;\n          background: #ddd;\n          border-radius: 12px;\n          cursor: pointer;\n          transition: background-color 0.3s ease;\n          position: relative;\n          flex-shrink: 0;\n        }\n        \n        .toggle-switch.active {\n          background: #667eea;\n        }\n        \n        .toggle-slider {\n          width: 100%;\n          height: 100%;\n          position: relative;\n        }\n        \n        .toggle-knob {\n          width: 20px;\n          height: 20px;\n          background: white;\n          border-radius: 50%;\n          position: absolute;\n          top: 2px;\n          left: 2px;\n          transition: transform 0.3s ease;\n          box-shadow: 0 2px 4px rgba(0,0,0,0.2);\n        }\n        \n        .toggle-switch.active .toggle-knob {\n          transform: translateX(24px);\n        }\n        \n        .setting-select {\n          background: white;\n          border: 2px solid #e2e8f0;\n          border-radius: 8px;\n          padding: 0.5rem;\n          font-weight: 600;\n          color: #333;\n          cursor: pointer;\n          min-width: 150px;\n        }\n        \n        .setting-select:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n        \n        .number-input {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n        }\n        \n        .setting-number {\n          background: white;\n          border: 2px solid #e2e8f0;\n          border-radius: 8px;\n          padding: 0.5rem;\n          font-weight: 600;\n          color: #333;\n          width: 80px;\n          text-align: center;\n        }\n        \n        .setting-number:focus {\n          outline: none;\n          border-color: #667eea;\n        }\n        \n        .input-unit {\n          color: #666;\n          font-size: 0.9rem;\n          font-weight: 600;\n        }\n        \n        .settings-info {\n          margin-top: 2rem;\n        }\n        \n        .info-card {\n          background: rgba(255, 255, 255, 0.95);\n          backdrop-filter: blur(10px);\n          border-radius: 15px;\n          padding: 1.5rem;\n          display: flex;\n          gap: 1rem;\n          border-left: 4px solid #667eea;\n        }\n        \n        .info-icon {\n          width: 24px;\n          height: 24px;\n          color: #667eea;\n          flex-shrink: 0;\n          margin-top: 0.25rem;\n        }\n        \n        .info-content h4 {\n          margin: 0 0 0.5rem 0;\n          color: #333;\n          font-size: 1.1rem;\n        }\n        \n        .info-content p {\n          margin: 0.5rem 0;\n          color: #666;\n          line-height: 1.5;\n          font-size: 0.9rem;\n        }\n        \n        @media (max-width: 768px) {\n          .settings-header {\n            flex-direction: column;\n            gap: 1rem;\n            text-align: center;\n          }\n          \n          .settings-header h1 {\n            font-size: 1.5rem;\n          }\n          \n          .setting-item {\n            flex-direction: column;\n            align-items: flex-start;\n            gap: 0.75rem;\n          }\n          \n          .setting-select,\n          .number-input {\n            align-self: flex-start;\n          }\n          \n          .info-card {\n            flex-direction: column;\n            text-align: center;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Settings;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}