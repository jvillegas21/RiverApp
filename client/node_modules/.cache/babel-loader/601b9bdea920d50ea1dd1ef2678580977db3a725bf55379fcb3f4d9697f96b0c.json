{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useRef, useCallback, useEffect } from 'react';\nexport const useWebSocket = url => {\n  _s();\n  const [connected, setConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = 5;\n  const connect = useCallback(() => {\n    try {\n      ws.current = new WebSocket(url);\n      ws.current.onopen = () => {\n        setConnected(true);\n        setError(null);\n        reconnectAttempts.current = 0;\n        console.log('WebSocket connected');\n      };\n      ws.current.onmessage = event => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessage(data);\n        } catch (err) {\n          console.error('Error parsing WebSocket message:', err);\n        }\n      };\n      ws.current.onclose = () => {\n        setConnected(false);\n        console.log('WebSocket disconnected');\n\n        // Attempt to reconnect\n        if (reconnectAttempts.current < maxReconnectAttempts) {\n          const timeout = Math.pow(2, reconnectAttempts.current) * 1000; // Exponential backoff\n          reconnectTimeoutRef.current = setTimeout(() => {\n            reconnectAttempts.current++;\n            connect();\n          }, timeout);\n        } else {\n          setError('Failed to connect after multiple attempts');\n        }\n      };\n      ws.current.onerror = error => {\n        console.error('WebSocket error:', error);\n        setError('WebSocket connection error');\n      };\n    } catch (err) {\n      console.error('Error creating WebSocket:', err);\n      setError('Failed to create WebSocket connection');\n    }\n  }, [url]);\n  const disconnect = useCallback(() => {\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n  const sendMessage = useCallback(message => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(message));\n    } else {\n      console.warn('WebSocket is not connected');\n    }\n  }, []);\n  useEffect(() => {\n    connect();\n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect]);\n  return {\n    connected,\n    lastMessage,\n    error,\n    sendMessage,\n    reconnect: connect\n  };\n};\n_s(useWebSocket, \"nw2T7jHLDhrYE3DDBgIP32LoFb8=\");","map":{"version":3,"names":["useState","useRef","useCallback","useEffect","useWebSocket","url","_s","connected","setConnected","lastMessage","setLastMessage","error","setError","ws","reconnectTimeoutRef","reconnectAttempts","maxReconnectAttempts","connect","current","WebSocket","onopen","console","log","onmessage","event","data","JSON","parse","err","onclose","timeout","Math","pow","setTimeout","onerror","disconnect","clearTimeout","close","sendMessage","message","readyState","OPEN","send","stringify","warn","reconnect"],"sources":["/workspace/client/src/hooks/useWebSocket.js"],"sourcesContent":["import { useState, useRef, useCallback, useEffect } from 'react';\n\nexport const useWebSocket = (url) => {\n  const [connected, setConnected] = useState(false);\n  const [lastMessage, setLastMessage] = useState(null);\n  const [error, setError] = useState(null);\n  const ws = useRef(null);\n  const reconnectTimeoutRef = useRef(null);\n  const reconnectAttempts = useRef(0);\n  const maxReconnectAttempts = 5;\n\n  const connect = useCallback(() => {\n    try {\n      ws.current = new WebSocket(url);\n      \n      ws.current.onopen = () => {\n        setConnected(true);\n        setError(null);\n        reconnectAttempts.current = 0;\n        console.log('WebSocket connected');\n      };\n\n      ws.current.onmessage = (event) => {\n        try {\n          const data = JSON.parse(event.data);\n          setLastMessage(data);\n        } catch (err) {\n          console.error('Error parsing WebSocket message:', err);\n        }\n      };\n\n      ws.current.onclose = () => {\n        setConnected(false);\n        console.log('WebSocket disconnected');\n        \n        // Attempt to reconnect\n        if (reconnectAttempts.current < maxReconnectAttempts) {\n          const timeout = Math.pow(2, reconnectAttempts.current) * 1000; // Exponential backoff\n          reconnectTimeoutRef.current = setTimeout(() => {\n            reconnectAttempts.current++;\n            connect();\n          }, timeout);\n        } else {\n          setError('Failed to connect after multiple attempts');\n        }\n      };\n\n      ws.current.onerror = (error) => {\n        console.error('WebSocket error:', error);\n        setError('WebSocket connection error');\n      };\n    } catch (err) {\n      console.error('Error creating WebSocket:', err);\n      setError('Failed to create WebSocket connection');\n    }\n  }, [url]);\n\n  const disconnect = useCallback(() => {\n    if (reconnectTimeoutRef.current) {\n      clearTimeout(reconnectTimeoutRef.current);\n    }\n    \n    if (ws.current) {\n      ws.current.close();\n    }\n  }, []);\n\n  const sendMessage = useCallback((message) => {\n    if (ws.current && ws.current.readyState === WebSocket.OPEN) {\n      ws.current.send(JSON.stringify(message));\n    } else {\n      console.warn('WebSocket is not connected');\n    }\n  }, []);\n\n  useEffect(() => {\n    connect();\n    \n    return () => {\n      disconnect();\n    };\n  }, [connect, disconnect]);\n\n  return {\n    connected,\n    lastMessage,\n    error,\n    sendMessage,\n    reconnect: connect\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}