{"ast":null,"code":"var _jsxFileName = \"/workspace/client/src/components/Dashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { AlertTriangle, Shield, MapPin, TrendingUp, Waves, Mountain, Clock, Activity, RefreshCw } from 'lucide-react';\nimport WaterLevelChart from './WaterLevelChart';\nimport RiskAssessment from './RiskAssessment';\nimport NearbyMonitoringSites from './NearbyMonitoringSites';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = ({\n  location\n}) => {\n  _s();\n  var _location$accuracy, _floodRisk$elevation, _floodRisk$elevation2;\n  const [floodRisk, setFloodRisk] = useState(null);\n  const [nearbySites, setNearbySites] = useState([]);\n  const [selectedSite, setSelectedSite] = useState(null);\n  const [waterLevelData, setWaterLevelData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  // Fetch flood risk assessment\n  const fetchFloodRisk = async () => {\n    if (!location) return;\n    try {\n      setLoading(true);\n      const response = await axios.get('/api/flood-risk', {\n        params: {\n          lat: location.latitude,\n          lon: location.longitude\n        }\n      });\n      setFloodRisk(response.data);\n    } catch (error) {\n      console.error('Error fetching flood risk:', error);\n      toast.error('Failed to assess flood risk');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch nearby monitoring sites\n  const fetchNearbySites = async () => {\n    if (!location) return;\n    try {\n      const response = await axios.get('/api/nearby-sites', {\n        params: {\n          lat: location.latitude,\n          lon: location.longitude,\n          radius: 50\n        }\n      });\n      setNearbySites(response.data.sites || []);\n\n      // Auto-select the closest site\n      if (response.data.sites && response.data.sites.length > 0) {\n        setSelectedSite(response.data.sites[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching nearby sites:', error);\n      toast.error('Failed to fetch nearby monitoring sites');\n    }\n  };\n\n  // Fetch water level data for selected site\n  const fetchWaterLevelData = async siteId => {\n    if (!siteId) return;\n    try {\n      const response = await axios.get(`/api/water-levels/${siteId}`, {\n        params: {\n          days: 7\n        }\n      });\n      setWaterLevelData(response.data);\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error('Error fetching water level data:', error);\n      toast.error('Failed to fetch water level data');\n    }\n  };\n\n  // Refresh all data\n  const refreshData = async () => {\n    setLoading(true);\n    await Promise.all([fetchFloodRisk(), fetchNearbySites(), selectedSite ? fetchWaterLevelData(selectedSite.id) : Promise.resolve()]);\n    setLoading(false);\n    toast.success('Data refreshed successfully');\n  };\n  useEffect(() => {\n    if (location) {\n      fetchFloodRisk();\n      fetchNearbySites();\n    }\n  }, [location]);\n  useEffect(() => {\n    if (selectedSite) {\n      fetchWaterLevelData(selectedSite.id);\n    }\n  }, [selectedSite]);\n  const getRiskColor = riskLevel => {\n    switch (riskLevel) {\n      case 'LOW':\n        return 'risk-low';\n      case 'MODERATE':\n        return 'risk-moderate';\n      case 'HIGH':\n        return 'risk-high';\n      default:\n        return 'risk-low';\n    }\n  };\n  const getRiskIcon = riskLevel => {\n    switch (riskLevel) {\n      case 'LOW':\n        return /*#__PURE__*/_jsxDEV(Shield, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 26\n        }, this);\n      case 'MODERATE':\n        return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 31\n        }, this);\n      case 'HIGH':\n        return /*#__PURE__*/_jsxDEV(AlertTriangle, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 27\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(Shield, {\n          size: 20\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 23\n        }, this);\n    }\n  };\n  if (!location) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"loading-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Waiting for location access...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Flood Monitoring Dashboard\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"dashboard-controls\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: refreshData,\n          className: \"btn btn-secondary\",\n          disabled: loading,\n          children: [/*#__PURE__*/_jsxDEV(RefreshCw, {\n            size: 18,\n            className: loading ? 'animate-spin' : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), \"Refresh Data\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"dashboard-grid\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(MapPin, {\n            className: \"card-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Current Location\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"location-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Latitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 16\n            }, this), \" \", location.latitude.toFixed(6)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Longitude:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 16\n            }, this), \" \", location.longitude.toFixed(6)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"Accuracy:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 16\n            }, this), \" \\xB1\", (_location$accuracy = location.accuracy) === null || _location$accuracy === void 0 ? void 0 : _location$accuracy.toFixed(0), \"m\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), floodRisk && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-2\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Elevation:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 20\n              }, this), \" \", (_floodRisk$elevation = floodRisk.elevation) === null || _floodRisk$elevation === void 0 ? void 0 : _floodRisk$elevation.toFixed(1), \"m above sea level\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(AlertTriangle, {\n            className: \"card-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Flood Risk Assessment\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), loading && !floodRisk ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"loading-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Assessing flood risk...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this) : floodRisk ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"risk-assessment\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: `risk-indicator ${getRiskColor(floodRisk.riskLevel)}`,\n            children: [getRiskIcon(floodRisk.riskLevel), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [floodRisk.riskLevel, \" RISK\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"risk-details mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"risk-metric\",\n              children: [/*#__PURE__*/_jsxDEV(Mountain, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Elevation: \", (_floodRisk$elevation2 = floodRisk.elevation) === null || _floodRisk$elevation2 === void 0 ? void 0 : _floodRisk$elevation2.toFixed(1), \"m\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"risk-metric\",\n              children: [/*#__PURE__*/_jsxDEV(Waves, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: [\"Nearby water sources: \", floodRisk.nearbyWaterBodies]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, this), floodRisk.riskFactors && floodRisk.riskFactors.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"risk-factors mt-2\",\n              children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n                children: \"Risk Factors:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n                children: floodRisk.riskFactors.map((factor, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n                  children: factor\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 25\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"Unable to assess flood risk at this time.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card water-level-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(TrendingUp, {\n            className: \"card-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Water Level Monitoring\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 13\n          }, this), lastUpdated && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"last-updated\",\n            children: [/*#__PURE__*/_jsxDEV(Clock, {\n              size: 16\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\"Updated: \", lastUpdated.toLocaleTimeString()]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this), selectedSite && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"selected-site\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedSite.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"site-distance\",\n            children: [selectedSite.distance.toFixed(1), \" km away\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 237,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 13\n        }, this), waterLevelData && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chart-container\",\n          children: /*#__PURE__*/_jsxDEV(WaterLevelChart, {\n            data: waterLevelData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 13\n        }, this), !selectedSite && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-muted\",\n          children: \"No monitoring sites found nearby.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-header\",\n          children: [/*#__PURE__*/_jsxDEV(Activity, {\n            className: \"card-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"card-title\",\n            children: \"Nearby Monitoring Sites\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(NearbyMonitoringSites, {\n          sites: nearbySites,\n          selectedSite: selectedSite,\n          onSiteSelect: setSelectedSite\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 255,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"style\", {\n      jsx: true,\n      children: `\n        .dashboard {\n          width: 100%;\n        }\n        \n        .dashboard-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 2rem;\n        }\n        \n        .dashboard-header h1 {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n        }\n        \n        .dashboard-controls {\n          display: flex;\n          gap: 1rem;\n        }\n        \n        .animate-spin {\n          animation: spin 1s linear infinite;\n        }\n        \n        .location-info p {\n          margin: 0.5rem 0;\n          color: #666;\n        }\n        \n        .location-info strong {\n          color: #333;\n        }\n        \n        .risk-assessment {\n          text-align: center;\n        }\n        \n        .risk-details {\n          text-align: left;\n        }\n        \n        .risk-metric {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          margin: 0.5rem 0;\n          color: #666;\n        }\n        \n        .risk-factors ul {\n          margin: 0.5rem 0;\n          padding-left: 1.5rem;\n        }\n        \n        .risk-factors li {\n          margin: 0.25rem 0;\n          color: #666;\n        }\n        \n        .water-level-card {\n          grid-column: span 2;\n        }\n        \n        .selected-site {\n          margin-bottom: 1rem;\n        }\n        \n        .selected-site h3 {\n          margin: 0;\n          color: #333;\n          font-size: 1.1rem;\n        }\n        \n        .site-distance {\n          color: #666;\n          font-size: 0.9rem;\n          margin: 0.25rem 0;\n        }\n        \n        .last-updated {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          color: #666;\n          font-size: 0.85rem;\n        }\n        \n        @media (max-width: 768px) {\n          .dashboard-header {\n            flex-direction: column;\n            gap: 1rem;\n            text-align: center;\n          }\n          \n          .dashboard-header h1 {\n            font-size: 1.5rem;\n          }\n          \n          .water-level-card {\n            grid-column: span 1;\n          }\n        }\n      `\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 142,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"ldI8sL2g61wYVSJUFOMlP7hw3Ts=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","AlertTriangle","Shield","MapPin","TrendingUp","Waves","Mountain","Clock","Activity","RefreshCw","WaterLevelChart","RiskAssessment","NearbyMonitoringSites","jsxDEV","_jsxDEV","Dashboard","location","_s","_location$accuracy","_floodRisk$elevation","_floodRisk$elevation2","floodRisk","setFloodRisk","nearbySites","setNearbySites","selectedSite","setSelectedSite","waterLevelData","setWaterLevelData","loading","setLoading","lastUpdated","setLastUpdated","fetchFloodRisk","response","get","params","lat","latitude","lon","longitude","data","error","console","fetchNearbySites","radius","sites","length","fetchWaterLevelData","siteId","days","Date","refreshData","Promise","all","id","resolve","success","getRiskColor","riskLevel","getRiskIcon","size","fileName","_jsxFileName","lineNumber","columnNumber","className","children","onClick","disabled","toFixed","accuracy","elevation","nearbyWaterBodies","riskFactors","map","factor","index","toLocaleTimeString","name","distance","onSiteSelect","jsx","_c","$RefreshReg$"],"sources":["/workspace/client/src/components/Dashboard.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport toast from 'react-hot-toast';\nimport { \n  AlertTriangle, \n  Shield, \n  MapPin, \n  TrendingUp, \n  Waves,\n  Mountain,\n  Clock,\n  Activity,\n  RefreshCw\n} from 'lucide-react';\n\nimport WaterLevelChart from './WaterLevelChart';\nimport RiskAssessment from './RiskAssessment';\nimport NearbyMonitoringSites from './NearbyMonitoringSites';\n\nconst Dashboard = ({ location }) => {\n  const [floodRisk, setFloodRisk] = useState(null);\n  const [nearbySites, setNearbySites] = useState([]);\n  const [selectedSite, setSelectedSite] = useState(null);\n  const [waterLevelData, setWaterLevelData] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const [lastUpdated, setLastUpdated] = useState(null);\n\n  // Fetch flood risk assessment\n  const fetchFloodRisk = async () => {\n    if (!location) return;\n    \n    try {\n      setLoading(true);\n      const response = await axios.get('/api/flood-risk', {\n        params: {\n          lat: location.latitude,\n          lon: location.longitude\n        }\n      });\n      setFloodRisk(response.data);\n    } catch (error) {\n      console.error('Error fetching flood risk:', error);\n      toast.error('Failed to assess flood risk');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch nearby monitoring sites\n  const fetchNearbySites = async () => {\n    if (!location) return;\n    \n    try {\n      const response = await axios.get('/api/nearby-sites', {\n        params: {\n          lat: location.latitude,\n          lon: location.longitude,\n          radius: 50\n        }\n      });\n      setNearbySites(response.data.sites || []);\n      \n      // Auto-select the closest site\n      if (response.data.sites && response.data.sites.length > 0) {\n        setSelectedSite(response.data.sites[0]);\n      }\n    } catch (error) {\n      console.error('Error fetching nearby sites:', error);\n      toast.error('Failed to fetch nearby monitoring sites');\n    }\n  };\n\n  // Fetch water level data for selected site\n  const fetchWaterLevelData = async (siteId) => {\n    if (!siteId) return;\n    \n    try {\n      const response = await axios.get(`/api/water-levels/${siteId}`, {\n        params: { days: 7 }\n      });\n      setWaterLevelData(response.data);\n      setLastUpdated(new Date());\n    } catch (error) {\n      console.error('Error fetching water level data:', error);\n      toast.error('Failed to fetch water level data');\n    }\n  };\n\n  // Refresh all data\n  const refreshData = async () => {\n    setLoading(true);\n    await Promise.all([\n      fetchFloodRisk(),\n      fetchNearbySites(),\n      selectedSite ? fetchWaterLevelData(selectedSite.id) : Promise.resolve()\n    ]);\n    setLoading(false);\n    toast.success('Data refreshed successfully');\n  };\n\n  useEffect(() => {\n    if (location) {\n      fetchFloodRisk();\n      fetchNearbySites();\n    }\n  }, [location]);\n\n  useEffect(() => {\n    if (selectedSite) {\n      fetchWaterLevelData(selectedSite.id);\n    }\n  }, [selectedSite]);\n\n  const getRiskColor = (riskLevel) => {\n    switch (riskLevel) {\n      case 'LOW': return 'risk-low';\n      case 'MODERATE': return 'risk-moderate';\n      case 'HIGH': return 'risk-high';\n      default: return 'risk-low';\n    }\n  };\n\n  const getRiskIcon = (riskLevel) => {\n    switch (riskLevel) {\n      case 'LOW': return <Shield size={20} />;\n      case 'MODERATE': return <AlertTriangle size={20} />;\n      case 'HIGH': return <AlertTriangle size={20} />;\n      default: return <Shield size={20} />;\n    }\n  };\n\n  if (!location) {\n    return (\n      <div className=\"loading-container\">\n        <div className=\"spinner\"></div>\n        <p>Waiting for location access...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"dashboard\">\n      <div className=\"dashboard-header\">\n        <h1>Flood Monitoring Dashboard</h1>\n        <div className=\"dashboard-controls\">\n          <button \n            onClick={refreshData}\n            className=\"btn btn-secondary\"\n            disabled={loading}\n          >\n            <RefreshCw size={18} className={loading ? 'animate-spin' : ''} />\n            Refresh Data\n          </button>\n        </div>\n      </div>\n\n      <div className=\"dashboard-grid\">\n        {/* Current Location Card */}\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <MapPin className=\"card-icon\" />\n            <h2 className=\"card-title\">Current Location</h2>\n          </div>\n          <div className=\"location-info\">\n            <p><strong>Latitude:</strong> {location.latitude.toFixed(6)}</p>\n            <p><strong>Longitude:</strong> {location.longitude.toFixed(6)}</p>\n            <p><strong>Accuracy:</strong> ±{location.accuracy?.toFixed(0)}m</p>\n            {floodRisk && (\n              <div className=\"mt-2\">\n                <p><strong>Elevation:</strong> {floodRisk.elevation?.toFixed(1)}m above sea level</p>\n              </div>\n            )}\n          </div>\n        </div>\n\n        {/* Flood Risk Assessment */}\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <AlertTriangle className=\"card-icon\" />\n            <h2 className=\"card-title\">Flood Risk Assessment</h2>\n          </div>\n          {loading && !floodRisk ? (\n            <div className=\"loading-container\">\n              <div className=\"spinner\"></div>\n              <p>Assessing flood risk...</p>\n            </div>\n          ) : floodRisk ? (\n            <div className=\"risk-assessment\">\n              <div className={`risk-indicator ${getRiskColor(floodRisk.riskLevel)}`}>\n                {getRiskIcon(floodRisk.riskLevel)}\n                <span>{floodRisk.riskLevel} RISK</span>\n              </div>\n              \n              <div className=\"risk-details mt-3\">\n                <div className=\"risk-metric\">\n                  <Mountain size={16} />\n                  <span>Elevation: {floodRisk.elevation?.toFixed(1)}m</span>\n                </div>\n                <div className=\"risk-metric\">\n                  <Waves size={16} />\n                  <span>Nearby water sources: {floodRisk.nearbyWaterBodies}</span>\n                </div>\n                \n                {floodRisk.riskFactors && floodRisk.riskFactors.length > 0 && (\n                  <div className=\"risk-factors mt-2\">\n                    <h4>Risk Factors:</h4>\n                    <ul>\n                      {floodRisk.riskFactors.map((factor, index) => (\n                        <li key={index}>{factor}</li>\n                      ))}\n                    </ul>\n                  </div>\n                )}\n              </div>\n            </div>\n          ) : (\n            <p className=\"text-muted\">Unable to assess flood risk at this time.</p>\n          )}\n        </div>\n\n        {/* Water Level Monitoring */}\n        <div className=\"card water-level-card\">\n          <div className=\"card-header\">\n            <TrendingUp className=\"card-icon\" />\n            <h2 className=\"card-title\">Water Level Monitoring</h2>\n            {lastUpdated && (\n              <div className=\"last-updated\">\n                <Clock size={16} />\n                <span>Updated: {lastUpdated.toLocaleTimeString()}</span>\n              </div>\n            )}\n          </div>\n          \n          {selectedSite && (\n            <div className=\"selected-site\">\n              <h3>{selectedSite.name}</h3>\n              <p className=\"site-distance\">\n                {selectedSite.distance.toFixed(1)} km away\n              </p>\n            </div>\n          )}\n          \n          {waterLevelData && (\n            <div className=\"chart-container\">\n              <WaterLevelChart data={waterLevelData} />\n            </div>\n          )}\n          \n          {!selectedSite && (\n            <p className=\"text-muted\">No monitoring sites found nearby.</p>\n          )}\n        </div>\n\n        {/* Nearby Monitoring Sites */}\n        <div className=\"card\">\n          <div className=\"card-header\">\n            <Activity className=\"card-icon\" />\n            <h2 className=\"card-title\">Nearby Monitoring Sites</h2>\n          </div>\n          \n          <NearbyMonitoringSites\n            sites={nearbySites}\n            selectedSite={selectedSite}\n            onSiteSelect={setSelectedSite}\n          />\n        </div>\n      </div>\n\n      <style jsx>{`\n        .dashboard {\n          width: 100%;\n        }\n        \n        .dashboard-header {\n          display: flex;\n          justify-content: space-between;\n          align-items: center;\n          margin-bottom: 2rem;\n        }\n        \n        .dashboard-header h1 {\n          color: white;\n          font-size: 2rem;\n          font-weight: 700;\n        }\n        \n        .dashboard-controls {\n          display: flex;\n          gap: 1rem;\n        }\n        \n        .animate-spin {\n          animation: spin 1s linear infinite;\n        }\n        \n        .location-info p {\n          margin: 0.5rem 0;\n          color: #666;\n        }\n        \n        .location-info strong {\n          color: #333;\n        }\n        \n        .risk-assessment {\n          text-align: center;\n        }\n        \n        .risk-details {\n          text-align: left;\n        }\n        \n        .risk-metric {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          margin: 0.5rem 0;\n          color: #666;\n        }\n        \n        .risk-factors ul {\n          margin: 0.5rem 0;\n          padding-left: 1.5rem;\n        }\n        \n        .risk-factors li {\n          margin: 0.25rem 0;\n          color: #666;\n        }\n        \n        .water-level-card {\n          grid-column: span 2;\n        }\n        \n        .selected-site {\n          margin-bottom: 1rem;\n        }\n        \n        .selected-site h3 {\n          margin: 0;\n          color: #333;\n          font-size: 1.1rem;\n        }\n        \n        .site-distance {\n          color: #666;\n          font-size: 0.9rem;\n          margin: 0.25rem 0;\n        }\n        \n        .last-updated {\n          display: flex;\n          align-items: center;\n          gap: 0.5rem;\n          color: #666;\n          font-size: 0.85rem;\n        }\n        \n        @media (max-width: 768px) {\n          .dashboard-header {\n            flex-direction: column;\n            gap: 1rem;\n            text-align: center;\n          }\n          \n          .dashboard-header h1 {\n            font-size: 1.5rem;\n          }\n          \n          .water-level-card {\n            grid-column: span 1;\n          }\n        }\n      `}</style>\n    </div>\n  );\n};\n\nexport default Dashboard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}